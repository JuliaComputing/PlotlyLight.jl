# This file is not included in the PlotlyLight module.
# It is a standalone script that generates files from the Plotly.js schema.
using Pkg
Pkg.activate(@__DIR__)

using JSON3, Dates

#-----------------------------------------------------------------------------# Schema
obj = JSON3.read(read(download("https://api.plot.ly/v2/plot-schema?format=json&sha1=%27%27")))

_keys(x) = Tuple(sort!(collect(keys(x))))

traces = _keys(obj.schema.traces)
trace_defs = []

bullet(key::Symbol, val::String) =  "- `$(key)`: $(val)\n"
bullet(key::Symbol, val::JSON3.Object) = bullet(key, get(val, :description, ""))

open(joinpath(@__DIR__, "..", "src", "Traces.jl"), "w") do io
    println(io, """
    # This file is automatically generated.  Do not edit this file directly.
    # Last update: $(Dates.now()) ET

    module Traces

    using ..PlotlyLight: Plot
    """)

    for t in traces
        attributes_obj = obj.schema.traces[t].attributes
        attributes = _keys(obj.schema.traces[t].attributes)

        bullets = [bullet(a, attributes_obj[a]) for a in attributes]

        println(io, """
        #-----------------------------------------------------------------------------# $t
        export $t
        \"\"\"
            $t(; kw...) --> Plot(type=:$t, kw...)

        Create a Plotly trace of type `$t` with the given `kw` attributes.  Attributes will be
        validated against the Plotly schema.  Available attributes for `$t` are:

        $(bullets...)
        \"\"\"
        function $t(; kw...)
            for k in keys(kw)
                k in $attributes || @warn "Function `$t` does not have attribute `\$k`"
            end
            Plot(; type=:$t, kw...)
        end
        """)
    end
    println(io, "end  # module Traces")
end
